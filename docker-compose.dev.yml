version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: notification-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: notification_service_dev
      MYSQL_USER: notification_user
      MYSQL_PASSWORD: notification_pass
    ports:
      - '3306:3306'
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./database/schemas/notifications.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: notification-rabbitmq-dev
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - '5672:5672' # AMQP port
      - '15672:15672' # Management UI port
    volumes:
      - rabbitmq_dev_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notification-service-dev
    restart: unless-stopped
    ports:
      - '3003:3003'
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - DB_USER=notification_user
      - DB_PASSWORD=notification_pass
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - USER_SERVICE_URL=http://host.docker.internal:3001
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev

volumes:
  mysql_dev_data:
    driver: local
  rabbitmq_dev_data:
    driver: local
