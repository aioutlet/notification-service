version: '3.8'

services:
  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notification-service-docker
    restart: unless-stopped
    ports:
      - '3003:3003'
    environment:
      - NODE_ENV=development
      - PORT=3003
      - HOST=0.0.0.0
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=notification_service_dev
      - DB_USER=notification_user
      - DB_PASSWORD=notification_dev_pass_123
      - RABBITMQ_URL=amqp://admin:admin123@aioutlet-rabbitmq:5672
      - USER_SERVICE_URL=http://host.docker.internal:3002
      - JWT_SECRET=notification_service_jwt_dev_secret_123
      - LOG_LEVEL=debug
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3010
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - aioutlet-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3003/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mysql:
    image: mysql:latest
    container_name: notification-mysql-docker
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=mysql_root_dev_123
      - MYSQL_DATABASE=notification_service_dev
      - MYSQL_USER=notification_user
      - MYSQL_PASSWORD=notification_dev_pass_123
    ports:
      - '3307:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schemas/notifications.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10
      start_period: 30s
    networks:
      - aioutlet-network

volumes:
  mysql_data:
    driver: local

networks:
  aioutlet-network:
    external: true
    name: aioutlet-network
